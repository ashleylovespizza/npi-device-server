// Generated by CoffeeScript 1.3.3
(function() {
  var Server, ashley, net;

  net = require('net');

  ashley = function() {
    return alert("test");
  };

  Server = (function() {
    var clients;

    function Server() {}

    Server.prototype.DEFAULT_PORT = 12311;

    Server.prototype.DEFAULT_ADDR = "127.0.0.1";

    clients = [];

    Server.prototype.start = function() {
      var _this = this;
      this.server = net.createServer(function(c) {
        console.log("Connection received.");
        _this.addClient(c);
        c.write("WELCOME TO NO PANTS ISLAND");
        c.on('end', function() {
          _this.removeClient(c);
          return c.destroy();
        });
        return c.on('data', function(data) {
          var cleanWrite, client, _i, _len;
          if (String(data).trim() === 'length') {
            c.write("Clients: " + clients.length);
          }
          cleanWrite = function() {
            if (client !== c) {
              return client.write(data);
            }
          };
          for (_i = 0, _len = clients.length; _i < _len; _i++) {
            client = clients[_i];
            cleanWrite(data);
          }
          return console.log("message: " + data);
        });
      });
      return this.server.listen(this.DEFAULT_PORT, function() {
        return console.log("Server started.");
      });
    };

    Server.prototype.removeClient = function(c) {
      var client, _i, _len;
      for (_i = 0, _len = clients.length; _i < _len; _i++) {
        client = clients[_i];
        if (c === client) {
          clients.splice(_i, 1);
        }
      }
      return console.log("Client removed. Now holding " + clients.length + " clients.");
    };

    Server.prototype.addClient = function(c) {
      return clients.push(c);
    };

    return Server;

  })();

  exports.Server = Server;

}).call(this);
